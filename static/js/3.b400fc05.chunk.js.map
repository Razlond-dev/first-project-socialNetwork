{"version":3,"sources":["hoc/withAuthRedirect.tsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusHook.tsx","assets/images/userPhoto.jpg","components/Profile/ProfileInfo/ProfileDataForm.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","../node_modules/@ant-design/icons-svg/es/asn/LikeOutlined.js","../node_modules/@ant-design/icons/es/icons/LikeOutlined.js","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirectComponent","WrappedComponent","connect","props","restProps","to","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusHook","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","onBlur","updateUserStatus","type","autoFocus","style","fontSize","onClick","ProfileDataReduxForm","reduxForm","form","onSubmit","handleSubmit","error","className","Field","name","component","keys","profile","contacts","map","key","s","contact","placeholder","ProfileData","isOwner","goToEditMode","lookingForAJob","lookingForAJobDescription","fullName","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","padding","width","descriptionBlock","display","justifyContent","marginBottom","src","photos","large","userPhoto","mainPhoto","alt","target","files","savePhoto","initialValues","formData","saveProfile","then","LikeOutlined","ref","React","AntdIcon","assign","icon","LikeOutlinedSvg","displayName","Post","likeCount","setLikeCount","item","active","postPhoto","message","Textarea","formControl","MyPostsReduxForm","newPostText","validate","required","MyPosts","postsElements","posts","p","id","likesCount","postsBlock","values","addPost","newPost","MyPostsContainer","profilePage","dispatch","actions","addPostCreator","updateNewPostText","newText","updateNewPostTextCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","showProfileThunkCreator","getUserStatus","console","refreshProfile","prevProps","prevState","Component","compose","withRouter"],"mappings":"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","file":"static/js/3.b400fc05.chunk.js","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { appStateType } from '../redux/redux-store'\r\n\r\nlet mapStateToPropsForRedirect = (state: appStateType) => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\n\r\nexport function withAuthRedirectComponent<WCP> (WrappedComponent: React.ComponentType<WCP>) {\r\n  const RedirectComponent: React.FC<MapPropsType & DispatchPropsType> = (props) => {\r\n    let {isAuth, ...restProps} = props\r\n    if (!isAuth) return <Redirect to={'login'} />\r\n    \r\n      return <WrappedComponent {...restProps as WCP} />\r\n  }\r\n  let ConnectedRedirectComponent = connect<MapPropsType, DispatchPropsType, WCP, appStateType>(mapStateToPropsForRedirect)(RedirectComponent)\r\n  return ConnectedRedirectComponent\r\n}\r\n\r\n// types\r\ntype MapPropsType = {\r\n  isAuth: boolean\r\n}\r\n\r\ntype DispatchPropsType = {}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__35LXn\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1qcDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2IsAw\",\"posts\":\"MyPosts_posts__2afnD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1vLGK\",\"active\":\"Post_active__12JU4\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport Preloader from '../../common/preloader/preloader';\r\nimport s from './ProfileInfo.module.css'\r\n\r\ntype PropsType = {\r\n  status: string\r\n  updateUserStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatusHook: React.FC<PropsType> = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n  const deActivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateUserStatus(status)\r\n  }\r\n  const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n\r\n  return <>\r\n    { editMode\r\n      ? <div>\r\n        <input onChange={onStatusChange} onBlur={deActivateEditMode} type=\"text\" value={status} autoFocus={true} />\r\n      </div>\r\n      : <div>\r\n        <span style={{fontSize: 18}} onClick={activateEditMode}><b>Status: </b>{props.status || 'status is empty'}</span>\r\n      </div>\r\n    }\r\n\r\n  </>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default ProfileStatusHook","export default __webpack_public_path__ + \"static/media/userPhoto.d1a05c1c.jpg\";","import React from 'react';\r\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\r\nimport { profileType } from '../../../types/types';\r\nimport s from './ProfileInfo.module.css'\r\nimport { Button } from 'antd';\r\n\r\ntype PropsType = {\r\n  profile?: profileType | null\r\n}\r\n\r\nconst ProfileDataForm: React.FC<InjectedFormProps<profileType, PropsType> & PropsType> = (props) => {\r\n  return <form onSubmit={props.handleSubmit}>\r\n    <div>\r\n      <div>\r\n        {props.error\r\n          ? <div className='formSummaryError'> {props.error} </div>\r\n          : null}\r\n        <b>Looking for a job:</b> <Field type=\"checkbox\" name={'lookingForAJob'} component={'input'} />\r\n      </div>\r\n      <div>\r\n        <b>My proffecional skills:</b> <Field type=\"text\" name={'lookingForAJobDescription'} component={'textarea'} />\r\n      </div>\r\n      <div>\r\n        <b>fullName:</b> <Field type=\"text\" name={'fullName'} component={'input'} />\r\n      </div>\r\n      <div>\r\n        <b>about me:</b> <Field type=\"text\" name={'aboutMe'} component={'textarea'} />\r\n      </div>\r\n      <div>\r\n        <b>Contacts:</b> {Object.keys(props.profile!.contacts).map(key => {\r\n          return <div key={key} className={s.contact}>\r\n            <b>{key}:</b> <Field placeholder={key} type=\"text\" name={'contacts.' + key} component={'input'} />\r\n          </div>\r\n        })}\r\n      </div>\r\n      <Button onClick={props.handleSubmit}>Save</Button></div>\r\n  </form >\r\n}\r\n\r\n\r\n\r\n\r\nconst ProfileDataReduxForm = reduxForm<profileType, PropsType>({ form: 'editProfile' })(ProfileDataForm)\r\n\r\n\r\nexport default ProfileDataReduxForm","import React, { ChangeEvent, useState } from 'react';\r\nimport Preloader from '../../common/preloader/preloader';\r\nimport s from './ProfileInfo.module.css'\r\nimport ProfileStatusHook from './ProfileStatusHook';\r\nimport userPhoto from '../../../assets/images/userPhoto.jpg'\r\nimport ProfileDataForm from './ProfileDataForm';\r\nimport { profileType } from '../../../types/types';\r\nimport { savePhoto } from './../../../redux/Profile_reducer';\r\nimport { Input, Button } from 'antd';\r\n\r\n\r\n\r\nconst ProfileInfo: React.FC<PropsType> = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false)\r\n\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files?.length) {\r\n      props.savePhoto(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData: profileType) => {\r\n    // todo: remove then\r\n    props.saveProfile(formData).then(\r\n      () => {\r\n        setEditMode(false)\r\n      })\r\n\r\n  }\r\n\r\n  return <div style={{ padding: 50, width: 900 }}>\r\n    <div className={s.descriptionBlock} style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n      <div>\r\n        <img style={{ marginBottom: 10 }} src={props.profile.photos.large || userPhoto} className={s.mainPhoto} alt=\"avatar\" />\r\n        {props.isOwner && <input style={{ marginBottom: 20 }} type={'file'} onChange={onMainPhotoSelected} />}\r\n        <ProfileStatusHook status={props.status} updateUserStatus={props.updateUserStatus} />\r\n      </div>\r\n\r\n\r\n      {\r\n        editMode\r\n          ? <ProfileDataForm initialValues={props.profile} onSubmit={onSubmit} {...props} />\r\n          : <ProfileData profile={props.profile} goToEditMode={() => { setEditMode(true) }} isOwner={props.isOwner} />\r\n      }\r\n\r\n    </div>\r\n\r\n  </div>\r\n}\r\n\r\n\r\n\r\nconst ProfileData: React.FC<ProfileDataPropsType> = ({ profile, isOwner, goToEditMode }) => {\r\n  return <div style={{ fontSize: 16 }}>\r\n    <div>\r\n      <b>Looking for a job:</b> {profile.lookingForAJob ? 'Yes' : 'No'}\r\n    </div>\r\n    {profile.lookingForAJob && profile.lookingForAJobDescription &&\r\n      <div>\r\n        <b>My proffecional skills:</b> {profile.lookingForAJobDescription}\r\n      </div>\r\n    }\r\n    <div>\r\n      <b>fullName:</b> {profile.fullName}\r\n    </div>\r\n    <div>\r\n      <b>about me:</b> {profile.aboutMe}\r\n    </div>\r\n    <div>\r\n      <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n      })}\r\n    </div>\r\n    {isOwner && <div><Button onClick={goToEditMode}>Edit</Button></div>}\r\n  </div>\r\n}\r\n\r\n\r\nconst Contact: React.FC<ContactsPropsType> = ({ contactTitle, contactValue }) => {\r\n  return <div className={s.contact}><b>{contactTitle}:</b>{contactValue}</div>\r\n}\r\n\r\n\r\n\r\n\r\nexport default ProfileInfo\r\n\r\n// types\r\ntype ProfileDataPropsType = {\r\n  profile: profileType\r\n  isOwner: boolean\r\n  goToEditMode: () => void\r\n}\r\ntype ContactsPropsType = {\r\n  contactTitle: string\r\n  contactValue: string\r\n}\r\ntype PropsType = {\r\n  profile: profileType | null\r\n  status: string\r\n  isOwner: boolean\r\n  savePhoto: (file: File) => void\r\n  saveProfile: (profile: profileType) => Promise<any>\r\n  updateUserStatus: (status: string) => void\r\n}","// This icon file is generated automatically.\nvar LikeOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M885.9 533.7c16.8-22.2 26.1-49.4 26.1-77.7 0-44.9-25.1-87.4-65.5-111.1a67.67 67.67 0 00-34.3-9.3H572.4l6-122.9c1.4-29.7-9.1-57.9-29.5-79.4A106.62 106.62 0 00471 99.9c-52 0-98 35-111.8 85.1l-85.9 311H144c-17.7 0-32 14.3-32 32v364c0 17.7 14.3 32 32 32h601.3c9.2 0 18.2-1.8 26.5-5.4 47.6-20.3 78.3-66.8 78.3-118.4 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7-.2-12.6-2-25.1-5.6-37.1zM184 852V568h81v284h-81zm636.4-353l-21.9 19 13.9 25.4a56.2 56.2 0 016.9 27.3c0 16.5-7.2 32.2-19.6 43l-21.9 19 13.9 25.4a56.2 56.2 0 016.9 27.3c0 16.5-7.2 32.2-19.6 43l-21.9 19 13.9 25.4a56.2 56.2 0 016.9 27.3c0 22.4-13.2 42.6-33.6 51.8H329V564.8l99.5-360.5a44.1 44.1 0 0142.2-32.3c7.6 0 15.1 2.2 21.1 6.7 9.9 7.4 15.2 18.6 14.6 30.5l-9.6 198.4h314.4C829 418.5 840 436.9 840 456c0 16.5-7.2 32.1-19.6 43z\" } }] }, \"name\": \"like\", \"theme\": \"outlined\" };\nexport default LikeOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LikeOutlinedSvg from \"@ant-design/icons-svg/es/asn/LikeOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LikeOutlined = function LikeOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: LikeOutlinedSvg\n  }));\n};\n\nLikeOutlined.displayName = 'LikeOutlined';\nexport default /*#__PURE__*/React.forwardRef(LikeOutlined);","import React, { useState } from 'react';\r\nimport s from './Post.module.css'\r\nimport postPhoto from '../../../../assets/images/userPhoto.png'\r\nimport { Button } from 'antd';\r\nimport { LikeOutlined } from '@ant-design/icons';\r\ntype PropsType = {\r\n  message: string\r\n  likeCount: number\r\n}\r\n\r\nconst Post: React.FC<PropsType> = (props) => {\r\n  let [likeCount, setLikeCount] = useState(props.likeCount)\r\n\r\n  const like = () => {\r\n    setLikeCount(props.likeCount + 1)\r\n  }\r\n\r\n  return (\r\n    <div className={`${s.item} ${s.active}`}>\r\n      <img style={{ padding: 10 }} src={postPhoto} alt=\"post\" />\r\n      {props.message}\r\n      <div>\r\n        <Button onClick={like}><LikeOutlined />Like</Button> {likeCount}\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Post\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validation/validators';\r\nimport { formControl } from '../../common/FormControls/formControls';\r\nimport { postType } from '../../../types/types';\r\n\r\nconst Textarea = formControl('textarea')\r\n\r\nconst MyPostsForm: React.FC<InjectedFormProps<AddPostFormValuesType, PostFormOwnProps> & PostFormOwnProps> = (props) => {\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field name={'newPost'} value={props.newPostText} placeholder='Post something' component={Textarea} validate={required} />\r\n      </div>\r\n      <div>\r\n        <button>Add Post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n\r\n}\r\n\r\nconst MyPostsReduxForm = reduxForm<AddPostFormValuesType, PostFormOwnProps>({\r\n  form: 'newPost'\r\n})(MyPostsForm)\r\n\r\nconst MyPosts: React.FC<MapPropsType & DispatchPropsType> = (props) => {\r\n  let postsElements = props.posts.map(p => <Post key={p.id} message={p.message} likeCount={p.likesCount} />)\r\n\r\n  let onAddPost = (values: AddPostFormValuesType) => {\r\n    props.addPost(values.newPost)\r\n  }\r\n\r\n  return <div className={s.postsBlock}>\r\n    <div>\r\n      <h3>My posts</h3>\r\n      <MyPostsReduxForm onSubmit={onAddPost} />\r\n      <div className={s.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default MyPosts\r\n\r\n// types\r\nexport type MapPropsType = {\r\n  posts: Array<postType>\r\n\r\n}\r\nexport type DispatchPropsType = {\r\n  addPost: (newPostText: string) => void\r\n}\r\ntype AddPostFormValuesType = {\r\n  newPost: string\r\n}\r\ntype PostFormOwnProps = {\r\n  newPostText?: string\r\n}","import React from 'react';\r\nimport { actions } from '../../../redux/Profile_reducer'\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\nimport { appStateType } from '../../../redux/redux-store';\r\n\r\n\r\n\r\nlet mapStateToProps = (state: appStateType) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: (arg0: { type: \"ADD-POST\" | \"UPDATE-NEW-POST-TEXT\"; newPost?: string; newText?: string; }) => void) => {\r\n  return {\r\n    addPost: (newPost: string) => { dispatch(actions.addPostCreator(newPost)) },\r\n    updateNewPostText: (newText: string) => { dispatch(actions.updateNewPostTextCreator(newText)) }\r\n  }\r\n}\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer\r\n","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport MyPosts from './MyPosts/MyPosts'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport { profileType } from '../../types/types';\r\n\r\ntype PropsType = {\r\n  profile: profileType | null\r\n  status: string\r\n  isOwner: boolean\r\n  savePhoto: (file: File) => void\r\n  saveProfile: (profile: profileType) => Promise<any>\r\n  updateUserStatus: (status: string) => void\r\n}\r\n\r\nconst Profile: React.FC<PropsType> = (props) => {\r\n  return <div>\r\n    <ProfileInfo isOwner={props.isOwner} savePhoto={props.savePhoto} profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus} saveProfile={props.saveProfile} />\r\n    <MyPostsContainer />\r\n  </div>\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport MyPosts from './MyPosts/MyPosts'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport Profile from './Profile';\r\nimport Axios from 'axios';\r\nimport { connect} from 'react-redux';\r\nimport { showProfileThunkCreator, updateUserStatus, getUserStatus, savePhoto, saveProfile } from '../../redux/Profile_reducer'\r\nimport { Redirect, RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { profileAPI } from \"../../api/profileAPI\";\r\nimport { withAuthRedirectComponent } from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux';\r\nimport { appStateType } from '../../redux/redux-store';\r\nimport { profileType } from '../../types/types';\r\n\r\n\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\ntype DispatchPropsType = {\r\n  showProfileThunkCreator: (userId: number) => void\r\n   getUserStatus: (userId: number) => void\r\n   updateUserStatus: (status: string) => void\r\n   savePhoto: (file: File) => void\r\n   saveProfile: (profile: profileType) => Promise<any>\r\n}\r\ntype PathParamsType = {\r\n  userId: string\r\n}\r\n\r\ntype PropsType = MapPropsType & DispatchPropsType & RouteComponentProps<PathParamsType>;\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n  refreshProfile() {\r\n    let userId: number | null = +this.props.match.params.userId\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId\r\n    } \r\n\r\n    if (!userId) {\r\n      console.error('UserId should be in URL params or in state authorizedUserId')\r\n    } else {\r\n      this.props.showProfileThunkCreator(userId)\r\n    this.props.getUserStatus(userId)\r\n    }\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n  }\r\n  componentDidUpdate(prevProps: PropsType, prevState: PropsType) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n      this.refreshProfile()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div>\r\n      <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateUserStatus={this.props.updateUserStatus} isOwner={!this.props.match.params.userId}\r\n        savePhoto={this.props.savePhoto} />\r\n    </div>\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: appStateType) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, { showProfileThunkCreator, getUserStatus, updateUserStatus, savePhoto, saveProfile }),\r\n  withRouter,\r\n  withAuthRedirectComponent\r\n)(ProfileContainer)"],"sourceRoot":""}