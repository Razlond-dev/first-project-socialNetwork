{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirectComponent","Component","RedirectComponent","this","props","to","React","connect","ProfileContainer","userId","match","params","authorizedUserId","showProfileThunkCreator","getUserStatus","refreshProfile","prevProps","prevState","snapshot","profile","status","updateUserStatus","isOwner","savePhoto","compose","profilePage","saveProfile","withRouter"],"mappings":"8MAIIA,EAA6B,SAACC,GAChC,MAAO,CACLC,OAAQD,EAAME,KAAKD,SAKVE,EAA4B,SAACC,GAAe,IACjDC,EADgD,uKAGlD,OAAKC,KAAKC,MAAMN,OAET,kBAACG,EAAcE,KAAKC,OAFI,kBAAC,IAAD,CAAUC,GAAI,cAHK,GACtBC,IAAML,WAWtC,OADiCM,YAAQX,EAARW,CAAoCL,K,4LCPjEM,E,+KAGF,IAAIC,EAASN,KAAKC,MAAMM,MAAMC,OAAOF,OAChCA,IACHA,EAASN,KAAKC,MAAMQ,kBAEtBT,KAAKC,MAAMS,wBAAwBJ,GACnCN,KAAKC,MAAMU,cAAcL,K,0CAIzBN,KAAKY,mB,yCAEYC,EAAWC,EAAWC,GACnCf,KAAKC,MAAMM,MAAMC,OAAOF,QAAUO,EAAUN,MAAMC,OAAOF,QAC3DN,KAAKY,mB,+BAMP,OAAO,6BACL,kBAAC,IAAD,iBAAaZ,KAAKC,MAAlB,CAAyBe,QAAShB,KAAKC,MAAMe,QAASC,OAAQjB,KAAKC,MAAMgB,OAAQC,iBAAkBlB,KAAKC,MAAMiB,iBAAkBC,SAAUnB,KAAKC,MAAMM,MAAMC,OAAOF,OAChKc,UAAWpB,KAAKC,MAAMmB,kB,GAxBCjB,IAAML,WAsCtBuB,sBACbjB,aAToB,SAACV,GAAD,MAAY,CAChCsB,QAAStB,EAAM4B,YAAYN,QAC3BC,OAAQvB,EAAM4B,YAAYL,OAC1BR,iBAAkBf,EAAME,KAAKU,OAC7BX,OAAQD,EAAME,KAAKD,UAKM,CAAEe,4BAAyBC,kBAAeO,qBAAkBE,cAAWG,kBAChGC,IACA3B,IAHawB,CAIbhB","file":"static/js/4.27025124.chunk.js","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\n\r\nexport const withAuthRedirectComponent = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={'login'} />\r\n\r\n      return <Component {...this.props} />\r\n    }\r\n\r\n\r\n\r\n  }\r\n  let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n  return ConnectedRedirectComponent\r\n}","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport MyPosts from './MyPosts/MyPosts'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport Profile from './Profile';\r\nimport Axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { setUserProfile, showProfileThunkCreator, updateUserStatus, getUserStatus, savePhoto, saveProfile } from '../../redux/Profile_reducer'\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { profileAPI } from '../../api/api';\r\nimport { withAuthRedirectComponent } from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId\r\n    }\r\n    this.props.showProfileThunkCreator(userId)\r\n    this.props.getUserStatus(userId)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n  }\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n      this.refreshProfile()\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return <div>\r\n      <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateUserStatus={this.props.updateUserStatus} isOwner={!this.props.match.params.userId}\r\n        savePhoto={this.props.savePhoto} />\r\n    </div>\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { showProfileThunkCreator, getUserStatus, updateUserStatus, savePhoto, saveProfile }),\r\n  withRouter,\r\n  withAuthRedirectComponent\r\n)(ProfileContainer)"],"sourceRoot":""}